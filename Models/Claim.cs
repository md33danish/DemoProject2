// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace EngineersAppWebCore.Models
{
    public partial class Claim
    {
        public Claim()
        {
            ClaimHistories = new HashSet<ClaimHistory>();
            Jobs = new HashSet<Job>();
            SiteSurveyNews = new HashSet<SiteSurveyNew>();
        }

        public Guid Id { get; set; }
        public Guid ProductId { get; set; }
        public bool GenericQuestionAsked { get; set; }
        public Guid? ClientId { get; set; }
        public string ClaimRef { get; set; }
        public long? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public Guid? StatusId { get; set; }
        public bool? IsHighPriority { get; set; }
        public string Priority { get; set; }
        public Guid? AllocatedEngineerId { get; set; }
        public DateTime? EngineerAllocatedDate { get; set; }
        public bool ResolvedIssue { get; set; }
        public string AllocatedEngineerTime { get; set; }
        public DateTime? EngineerAllocatedForDate { get; set; }
        public string PolicyDocument { get; set; }
        public string Tcdocument { get; set; }
        public string CancelReason { get; set; }
        public bool? IsCancel { get; set; }
        public int JobId { get; set; }
        public Guid? LeadId { get; set; }
        public string ReferReason { get; set; }
        public Guid? ClaimTypeId { get; set; }
        public DateTime? EndServiceDate { get; set; }
        public string Make { get; set; }
        public string Model { get; set; }
        public string Age { get; set; }
        public string Notes { get; set; }
        public string FilePath { get; set; }
        public string RemedialWorkRecomendations { get; set; }
        public decimal? AgreedFee { get; set; }
        public decimal? InvoiceAmount { get; set; }
        public DateTime? InvoiceDate { get; set; }
        public bool? InvoiceCreated { get; set; }
        public bool? InvoiceApproved { get; set; }
        public DateTime? InvoiceApprovedDate { get; set; }
        public long? InvoiceApprovedBy { get; set; }
        public bool? InvoiceProcessed { get; set; }
        public DateTime? InvoiceProcessedDate { get; set; }
        public long? InvoiceProcessedBy { get; set; }
        public decimal? Rating { get; set; }
        public string RateNote { get; set; }
        public string RiskAddress { get; set; }
        public string RiskPostcode { get; set; }
        public DateTime? HoldDate { get; set; }
        public decimal? HandlingFee { get; set; }
        public string Labour { get; set; }
        public string Parts { get; set; }
        public decimal? Total { get; set; }
        public bool? JobComplete { get; set; }
        public DateTime? JobCompleteDate { get; set; }
        public bool? Fnolcomplete { get; set; }
        public DateTime? FnolcompleteDate { get; set; }
        public string Town { get; set; }
        public bool? Oneoffrepair { get; set; }
        public Guid? FkEnggId { get; set; }
        public DateTime? ServiceDueDate { get; set; }
        public bool? IsExcess { get; set; }
        public decimal? ExcessAmount { get; set; }
        public int? TypeId { get; set; }
        public Guid? PreviousStatusId { get; set; }
        public DateTime? StatusChangedDate { get; set; }
        public string AppointmentBookedDate { get; set; }
        public string AppointmentBookedTime { get; set; }
        public string WebInceptionDate { get; set; }
        public string WebStatus { get; set; }
        public string WebExcessAmount { get; set; }
        public string WebServiceDate { get; set; }
        public string WebTeam { get; set; }
        public string WebTotalAmount { get; set; }
        public string WebLossRatio { get; set; }
        public string WebInvoices { get; set; }
        public string EngineerAssignReason { get; set; }
        public DateTime? GoesIntoAuthDate { get; set; }
        public string AuthPriority { get; set; }
        public string AuthStatus { get; set; }
        public decimal? AuthAmountCollected { get; set; }
        public string AuthNote { get; set; }
        public DateTime? AuthLastSaveDate { get; set; }
        public DateTime? ServiceDelayDate { get; set; }
        public DateTime? DialledTodayDate { get; set; }
        public bool? Smssent { get; set; }
        public long? InhibitorTextCount { get; set; }
        public bool? InhibitorSold { get; set; }
        public bool? InhibitorNotInterested { get; set; }
        public DateTime? InhibitorDate { get; set; }
        public DateTime? InhibitorDialledTodayDate { get; set; }
        public DateTime? InhibitorSentSmsToday { get; set; }
        public Guid? LinkClaimId { get; set; }
        public string Lat { get; set; }
        public string Lng { get; set; }
        public DateTime? OnRouteDate { get; set; }
        public string IsBoilerAccessible { get; set; }
        public string IsBoilerWorking { get; set; }
        public string WhereIsBoilerLocated { get; set; }
        public string UnderwritingOutCome { get; set; }
        public int? UnderwritingPoint { get; set; }
        public string UnderwritingPaymentType { get; set; }
        public int? UnderwritingPaymentToBeCollected { get; set; }
        public string UnderwritingExtra { get; set; }
        public int? UnderwritingExcessAmount { get; set; }
        public int? ClaimSource { get; set; }
        public Guid? UnderwritingDisbursments { get; set; }
        public bool? ReminderSmsSent { get; set; }
        public bool? HideFromRemedial { get; set; }
        public long? HideFromRemedialClickedBy { get; set; }
        public bool? EmailSentToCustomer { get; set; }
        public long? EmailSentToCustomerClickedBy { get; set; }
        public bool? WithUpsells { get; set; }
        public long? WithUpsellsClickedBy { get; set; }
        public bool? WithAuthorisation { get; set; }
        public long? WithAuthorisationClickedBy { get; set; }
        public bool? WithCappedOff { get; set; }
        public long? WithCappedOffClickedBy { get; set; }
        public bool? SendRemedial { get; set; }
        public DateTime? SendRemedialDate { get; set; }
        public string BoilerServiceDocument { get; set; }
        public string BoilerServiceDocument1 { get; set; }
        public int? PriorityLabel { get; set; }
        public long? DeclineTypeId { get; set; }
        public string AuthBanding { get; set; }
        public long? IncompleteTypeId { get; set; }
        public int? LossRatioColour { get; set; }
        public bool? FirstTimeFix { get; set; }
        public bool? QualityFix { get; set; }
        public string ClaimGivenHour { get; set; }
        public string ClaimGivenMin { get; set; }
        public int? AuthMreason { get; set; }
        public string AuthMmake { get; set; }
        public string AuthMmodel { get; set; }
        public int? AuthMage { get; set; }
        public decimal? AuthMboilerValue { get; set; }
        public decimal? AuthMmarketValue { get; set; }
        public decimal? AuthMberlimit { get; set; }
        public bool? PriorityService { get; set; }
        public DateTime? FirstTimeEta { get; set; }
        public DateTime? LastEta { get; set; }
        public bool? IsStaywarmCustomer { get; set; }
        public bool? IsNewServiceRouteine { get; set; }
        public int? TextCount { get; set; }
        public DateTime? TempServiceDueDate { get; set; }
        public int? CancelCounterByCustomer { get; set; }
        public int? CancelCounterByHo { get; set; }
        public int? Covidsms { get; set; }
        public bool IsFca { get; set; }
        public string Web1stPolicyLiveDate { get; set; }
        public bool? ManufracturerService { get; set; }
        public int? VulnerabilityId { get; set; }
        public string VulnerabilityText { get; set; }

        public virtual Engineer AllocatedEngineer { get; set; }
        public virtual ClaimType ClaimType { get; set; }
        public virtual Product Product { get; set; }
        public virtual ICollection<ClaimHistory> ClaimHistories { get; set; }
        public virtual ICollection<Job> Jobs { get; set; }
        public virtual ICollection<SiteSurveyNew> SiteSurveyNews { get; set; }
    }
}